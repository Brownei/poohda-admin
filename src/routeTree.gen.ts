/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaitlistImport } from './routes/waitlist'
import { Route as OrdersImport } from './routes/orders'
import { Route as HomeImport } from './routes/home'
import { Route as IndexImport } from './routes/index'
import { Route as ClothesIndexImport } from './routes/clothes/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as ClothesAddNewClothesImport } from './routes/clothes/add-new-clothes'

// Create/Update Routes

const WaitlistRoute = WaitlistImport.update({
  id: '/waitlist',
  path: '/waitlist',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ClothesIndexRoute = ClothesIndexImport.update({
  id: '/clothes/',
  path: '/clothes/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const ClothesAddNewClothesRoute = ClothesAddNewClothesImport.update({
  id: '/clothes/add-new-clothes',
  path: '/clothes/add-new-clothes',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/waitlist': {
      id: '/waitlist'
      path: '/waitlist'
      fullPath: '/waitlist'
      preLoaderRoute: typeof WaitlistImport
      parentRoute: typeof rootRoute
    }
    '/clothes/add-new-clothes': {
      id: '/clothes/add-new-clothes'
      path: '/clothes/add-new-clothes'
      fullPath: '/clothes/add-new-clothes'
      preLoaderRoute: typeof ClothesAddNewClothesImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/clothes/': {
      id: '/clothes/'
      path: '/clothes'
      fullPath: '/clothes'
      preLoaderRoute: typeof ClothesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/orders': typeof OrdersRoute
  '/waitlist': typeof WaitlistRoute
  '/clothes/add-new-clothes': typeof ClothesAddNewClothesRoute
  '/categories': typeof CategoriesIndexRoute
  '/clothes': typeof ClothesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/orders': typeof OrdersRoute
  '/waitlist': typeof WaitlistRoute
  '/clothes/add-new-clothes': typeof ClothesAddNewClothesRoute
  '/categories': typeof CategoriesIndexRoute
  '/clothes': typeof ClothesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/orders': typeof OrdersRoute
  '/waitlist': typeof WaitlistRoute
  '/clothes/add-new-clothes': typeof ClothesAddNewClothesRoute
  '/categories/': typeof CategoriesIndexRoute
  '/clothes/': typeof ClothesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/orders'
    | '/waitlist'
    | '/clothes/add-new-clothes'
    | '/categories'
    | '/clothes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/orders'
    | '/waitlist'
    | '/clothes/add-new-clothes'
    | '/categories'
    | '/clothes'
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/orders'
    | '/waitlist'
    | '/clothes/add-new-clothes'
    | '/categories/'
    | '/clothes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRoute
  OrdersRoute: typeof OrdersRoute
  WaitlistRoute: typeof WaitlistRoute
  ClothesAddNewClothesRoute: typeof ClothesAddNewClothesRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  ClothesIndexRoute: typeof ClothesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRoute,
  OrdersRoute: OrdersRoute,
  WaitlistRoute: WaitlistRoute,
  ClothesAddNewClothesRoute: ClothesAddNewClothesRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  ClothesIndexRoute: ClothesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home",
        "/orders",
        "/waitlist",
        "/clothes/add-new-clothes",
        "/categories/",
        "/clothes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx"
    },
    "/waitlist": {
      "filePath": "waitlist.tsx"
    },
    "/clothes/add-new-clothes": {
      "filePath": "clothes/add-new-clothes.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/clothes/": {
      "filePath": "clothes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
