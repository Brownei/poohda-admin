/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WaitlistImport } from './routes/waitlist'
import { Route as ViewclothesImport } from './routes/viewclothes'
import { Route as ClothesImport } from './routes/clothes'
import { Route as CategoriesImport } from './routes/categories'
import { Route as AddclothesImport } from './routes/addclothes'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WaitlistRoute = WaitlistImport.update({
  id: '/waitlist',
  path: '/waitlist',
  getParentRoute: () => rootRoute,
} as any)

const ViewclothesRoute = ViewclothesImport.update({
  id: '/viewclothes',
  path: '/viewclothes',
  getParentRoute: () => rootRoute,
} as any)

const ClothesRoute = ClothesImport.update({
  id: '/clothes',
  path: '/clothes',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesRoute = CategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRoute,
} as any)

const AddclothesRoute = AddclothesImport.update({
  id: '/addclothes',
  path: '/addclothes',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/addclothes': {
      id: '/addclothes'
      path: '/addclothes'
      fullPath: '/addclothes'
      preLoaderRoute: typeof AddclothesImport
      parentRoute: typeof rootRoute
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesImport
      parentRoute: typeof rootRoute
    }
    '/clothes': {
      id: '/clothes'
      path: '/clothes'
      fullPath: '/clothes'
      preLoaderRoute: typeof ClothesImport
      parentRoute: typeof rootRoute
    }
    '/viewclothes': {
      id: '/viewclothes'
      path: '/viewclothes'
      fullPath: '/viewclothes'
      preLoaderRoute: typeof ViewclothesImport
      parentRoute: typeof rootRoute
    }
    '/waitlist': {
      id: '/waitlist'
      path: '/waitlist'
      fullPath: '/waitlist'
      preLoaderRoute: typeof WaitlistImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addclothes': typeof AddclothesRoute
  '/categories': typeof CategoriesRoute
  '/clothes': typeof ClothesRoute
  '/viewclothes': typeof ViewclothesRoute
  '/waitlist': typeof WaitlistRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addclothes': typeof AddclothesRoute
  '/categories': typeof CategoriesRoute
  '/clothes': typeof ClothesRoute
  '/viewclothes': typeof ViewclothesRoute
  '/waitlist': typeof WaitlistRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/addclothes': typeof AddclothesRoute
  '/categories': typeof CategoriesRoute
  '/clothes': typeof ClothesRoute
  '/viewclothes': typeof ViewclothesRoute
  '/waitlist': typeof WaitlistRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/addclothes'
    | '/categories'
    | '/clothes'
    | '/viewclothes'
    | '/waitlist'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/addclothes'
    | '/categories'
    | '/clothes'
    | '/viewclothes'
    | '/waitlist'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/addclothes'
    | '/categories'
    | '/clothes'
    | '/viewclothes'
    | '/waitlist'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AddclothesRoute: typeof AddclothesRoute
  CategoriesRoute: typeof CategoriesRoute
  ClothesRoute: typeof ClothesRoute
  ViewclothesRoute: typeof ViewclothesRoute
  WaitlistRoute: typeof WaitlistRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AddclothesRoute: AddclothesRoute,
  CategoriesRoute: CategoriesRoute,
  ClothesRoute: ClothesRoute,
  ViewclothesRoute: ViewclothesRoute,
  WaitlistRoute: WaitlistRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/addclothes",
        "/categories",
        "/clothes",
        "/viewclothes",
        "/waitlist"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/addclothes": {
      "filePath": "addclothes.tsx"
    },
    "/categories": {
      "filePath": "categories.tsx"
    },
    "/clothes": {
      "filePath": "clothes.tsx"
    },
    "/viewclothes": {
      "filePath": "viewclothes.tsx"
    },
    "/waitlist": {
      "filePath": "waitlist.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
